package tools.dynamia.zk.addons.chartjs;

/**
 * The tick configuration is nested under the scale configuration in the ticks property.
 * It defines options for the tick marks that are generated by the axis.
 */
public class Tick extends LazyJSONObject {

    private Boolean display ;
    private String fontColor;
    private String fontFamily;
    private Integer fontSize;
    private String fontStyle;
    private Boolean reverse;

    private String minorFontColor;
    private String minorFontFamily;
    private Integer minorFontSize;
    private Integer minorFontStyle;

    private String majorFontColor;
    private String majorFontFamily;
    private Integer majorFontSize;
    private Integer majorFontStyle;

    public Boolean getDisplay() {
        return display;
    }

    public void setDisplay(Boolean display) {
        this.display = display;
    }

    public String getFontColor() {
        return fontColor;
    }

    public void setFontColor(String fontColor) {
        this.fontColor = fontColor;
    }

    public String getFontFamily() {
        return fontFamily;
    }

    public void setFontFamily(String fontFamily) {
        this.fontFamily = fontFamily;
    }

    public Integer getFontSize() {
        return fontSize;
    }

    public void setFontSize(Integer fontSize) {
        this.fontSize = fontSize;
    }

    public String getFontStyle() {
        return fontStyle;
    }

    public void setFontStyle(String fontStyle) {
        this.fontStyle = fontStyle;
    }

    public Boolean getReverse() {
        return reverse;
    }

    public void setReverse(Boolean reverse) {
        this.reverse = reverse;
    }

    public String getMinorFontColor() {
        return minorFontColor;
    }

    public void setMinorFontColor(String minorFontColor) {
        this.minorFontColor = minorFontColor;
    }

    public String getMinorFontFamily() {
        return minorFontFamily;
    }

    public void setMinorFontFamily(String minorFontFamily) {
        this.minorFontFamily = minorFontFamily;
    }

    public Integer getMinorFontSize() {
        return minorFontSize;
    }

    public void setMinorFontSize(Integer minorFontSize) {
        this.minorFontSize = minorFontSize;
    }

    public Integer getMinorFontStyle() {
        return minorFontStyle;
    }

    public void setMinorFontStyle(Integer minorFontStyle) {
        this.minorFontStyle = minorFontStyle;
    }

    public String getMajorFontColor() {
        return majorFontColor;
    }

    public void setMajorFontColor(String majorFontColor) {
        this.majorFontColor = majorFontColor;
    }

    public String getMajorFontFamily() {
        return majorFontFamily;
    }

    public void setMajorFontFamily(String majorFontFamily) {
        this.majorFontFamily = majorFontFamily;
    }

    public Integer getMajorFontSize() {
        return majorFontSize;
    }

    public void setMajorFontSize(Integer majorFontSize) {
        this.majorFontSize = majorFontSize;
    }

    public Integer getMajorFontStyle() {
        return majorFontStyle;
    }

    public void setMajorFontStyle(Integer majorFontStyle) {
        this.majorFontStyle = majorFontStyle;
    }


    public static final class Builder {
        private Boolean display ;
        private String fontColor;
        private String fontFamily;
        private Integer fontSize;
        private String fontStyle;
        private Boolean reverse;
        private String minorFontColor;
        private String minorFontFamily;
        private Integer minorFontSize;
        private Integer minorFontStyle;
        private String majorFontColor;
        private String majorFontFamily;
        private Integer majorFontSize;
        private Integer majorFontStyle;

        private Builder() {
        }

        public static Builder init() {
            return new Builder();
        }

        public Builder display(Boolean display) {
            this.display = display;
            return this;
        }

        public Builder fontColor(String fontColor) {
            this.fontColor = fontColor;
            return this;
        }

        public Builder fontFamily(String fontFamily) {
            this.fontFamily = fontFamily;
            return this;
        }

        public Builder fontSize(Integer fontSize) {
            this.fontSize = fontSize;
            return this;
        }

        public Builder fontStyle(String fontStyle) {
            this.fontStyle = fontStyle;
            return this;
        }

        public Builder reverse(Boolean reverse) {
            this.reverse = reverse;
            return this;
        }

        public Builder minorFontColor(String minorFontColor) {
            this.minorFontColor = minorFontColor;
            return this;
        }

        public Builder minorFontFamily(String minorFontFamily) {
            this.minorFontFamily = minorFontFamily;
            return this;
        }

        public Builder minorFontSize(Integer minorFontSize) {
            this.minorFontSize = minorFontSize;
            return this;
        }

        public Builder minorFontStyle(Integer minorFontStyle) {
            this.minorFontStyle = minorFontStyle;
            return this;
        }

        public Builder majorFontColor(String majorFontColor) {
            this.majorFontColor = majorFontColor;
            return this;
        }

        public Builder majorFontFamily(String majorFontFamily) {
            this.majorFontFamily = majorFontFamily;
            return this;
        }

        public Builder majorFontSize(Integer majorFontSize) {
            this.majorFontSize = majorFontSize;
            return this;
        }

        public Builder majorFontStyle(Integer majorFontStyle) {
            this.majorFontStyle = majorFontStyle;
            return this;
        }

        public Tick build() {
            Tick tick = new Tick();
            tick.setDisplay(display);
            tick.setFontColor(fontColor);
            tick.setFontFamily(fontFamily);
            tick.setFontSize(fontSize);
            tick.setFontStyle(fontStyle);
            tick.setReverse(reverse);
            tick.setMinorFontColor(minorFontColor);
            tick.setMinorFontFamily(minorFontFamily);
            tick.setMinorFontSize(minorFontSize);
            tick.setMinorFontStyle(minorFontStyle);
            tick.setMajorFontColor(majorFontColor);
            tick.setMajorFontFamily(majorFontFamily);
            tick.setMajorFontSize(majorFontSize);
            tick.setMajorFontStyle(majorFontStyle);
            return tick;
        }
    }
}
